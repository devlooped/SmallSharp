<Project>

  <UsingTask AssemblyFile="SmallSharp.dll" TaskName="MonitorActiveDocument" Condition="'$(BuildingInsideVisualStudio)' == 'true'" />

  <PropertyGroup>
    <MSBuildShortVersion>$(MSBuildVersion.TrimEnd('0123456789').TrimEnd('.'))</MSBuildShortVersion>
    <!-- Excluding top-level files so we can only set to Compile the startup/active one -->
    <DefaultItemExcludesInProjectFolder>*$(DefaultLanguageSourceExtension)</DefaultItemExcludesInProjectFolder>
    <UserProjectNamespace>
      <Namespace Prefix="msb" Uri="http://schemas.microsoft.com/developer/msbuild/2003" />
    </UserProjectNamespace>
    <!-- ActiveDebugProfile comes from the .user file, automatically set to the only entry we generate in launchSettings.json -->
    <StartupFile>$(ActiveDebugProfile)</StartupFile>
    <StartupFileDependsOn>CollectStartupFile;SelectStartupFile;SelectTopLevelCompile</StartupFileDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <!-- Ensures all top-level files show up in the IDE -->
    <None Include="*$(DefaultLanguageSourceExtension)" Exclude="$(ActiveDebugProfile)" />
    <Compile Include="$(ActiveDebugProfile)" Condition="Exists('$(ActiveDebugProfile)')" />
  </ItemGroup>

  <!-- NOTE: we only require VS16.8+ when running in the IDE, since for CLI builds we just do targets stuff -->
  <Target Name="EnsureVisualStudio" BeforeTargets="BeforeCompile;CoreCompile"
          Condition="$(MSBuildShortVersion) &lt; '16.8' and '$(BuildingInsideVisualStudio)' == 'true'">
    <!-- Top-level programs require this, so does our source generator. -->
    <Error Text="SmallSharp requires Visual Studio 16.8 or greater." />
  </Target>

  <Target Name="MonitorActiveDocument" Condition="'$(BuildingInsideVisualStudio)' == 'true'" AfterTargets="CompileDesignTime" DependsOnTargets="CollectStartupFile">
    <MonitorActiveDocument LaunchProfiles="$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', 'Properties', 'launchSettings.json'))"
                           UserFile="$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(MSBuildProjectFile).user'))"
                           StartupFiles="@(StartupFile)" />
  </Target>

  <Target Name="StartupFile" BeforeTargets="BeforeCompile;CoreCompile;CompileDesignTime" DependsOnTargets="$(StartupFileDependsOn)" />

  <Target Name="CollectStartupFile">
    <ItemGroup>
      <StartupFile Include="*$(DefaultLanguageSourceExtension)" />
    </ItemGroup>
  </Target>

  <Target Name="SelectTopLevelCompile">
    <ItemGroup>
      <!-- We remove all top-level from Compile because copy/pasting startup files may end up 
           causing those items to be hardcoded in the .csproj -->
      <Compile Remove="@(Compile -> WithMetadataValue('RelativeDir', ''))" />
      <Compile Include="$(StartupFile)" Condition="'$(StartupFile)' != '' and Exists('$(StartupFile)')" />
    </ItemGroup>
  </Target>

  <!-- Defaults the startup file to the first Compile, if none previously selected. -->
  <Target Name="SelectStartupFile"
          Condition="'$(StartupFile)' == '' or !Exists('$(StartupFile)')">

    <PropertyGroup Condition="'$(ActiveDebugProfile)' == '' or !Exists('$(ActiveDebugProfile)')">
      <FindStartupFile>true</FindStartupFile>
    </PropertyGroup>
    <ItemGroup Condition="'$(FindStartupFile)' == 'true'">
      <ReversedCompile Include="@(StartupFile -> Reverse())" />
    </ItemGroup>
    <PropertyGroup Condition="'$(FindStartupFile)' == 'true'">
      <StartupFile>%(ReversedCompile.Identity)</StartupFile>
    </PropertyGroup>

    <!-- If .user file doesn't exist at all, create it now -->
    <PropertyGroup Condition="!Exists('$(MSBuildProjectFullPath).user')">
      <UserProject>
        <Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
          <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
            <DebuggerFlavor>ProjectDebugger</DebuggerFlavor>
          </PropertyGroup>
          <PropertyGroup>
            <ActiveDebugProfile>$(StartupFile)</ActiveDebugProfile>
          </PropertyGroup>
        </Project>
      </UserProject>
      <WriteStartupFile>false</WriteStartupFile>
    </PropertyGroup>
    <WriteLinesToFile File="$(MSBuildProjectFullPath).user"
                      Lines="$(UserProject)"
                      Condition="!Exists('$(MSBuildProjectFullPath).user')" />

    <XmlPoke XmlInputPath="$(MSBuildProjectFullPath).user"
             Value="$(StartupFile)"
             Query="/msb:Project/msb:PropertyGroup/msb:ActiveDebugProfile"
             Namespaces="$(UserProjectNamespace)"
             Condition="'$(WriteStartupFile)' != 'false' and '$(StartupFile)' != ''"/>

    <XmlPeek XmlInputPath="$(MSBuildProjectFullPath).user"
             Query="/msb:Project/msb:PropertyGroup/msb:ActiveDebugProfile/text()"
             Namespaces="$(UserProjectNamespace)">
      <Output TaskParameter="Result" PropertyName="StartupDebugProfile" />
    </XmlPeek>

    <PropertyGroup Condition="'$(StartupFile)' != '' and '$(StartupDebugProfile)' != '$(StartupFile)'">
      <ActiveDebugProfileProperty>
        <ActiveDebugProfile>$(StartupFile)</ActiveDebugProfile>
      </ActiveDebugProfileProperty>
    </PropertyGroup>

    <!-- The ActiveDebugProfile property element may be missing, failing to write the value -->
    <XmlPoke XmlInputPath="$(MSBuildProjectFullPath).user"
             Value="$(ActiveDebugProfileProperty)"
             Query="/msb:Project/msb:PropertyGroup"
             Namespaces="$(UserProjectNamespace)"
             Condition="'$(StartupFile)' != '' and '$(StartupDebugProfile)' != '$(StartupFile)'"/>

    <!-- Read again after we poke the ActiveDebugProfile property -->
    <XmlPeek XmlInputPath="$(MSBuildProjectFullPath).user"
             Query="/msb:Project/msb:PropertyGroup/msb:ActiveDebugProfile/text()"
             Namespaces="$(UserProjectNamespace)">
      <Output TaskParameter="Result" PropertyName="StartupDebugProfile" />
    </XmlPeek>

    <!-- The entire PropertyGroup could have been missing, failing to write the value -->
    <PropertyGroup Condition="'$(StartupFile)' != '' and '$(StartupDebugProfile)' != '$(StartupFile)'">
      <UserPropertyGroup>
        <PropertyGroup>
          <ActiveDebugProfile>$(StartupFile)</ActiveDebugProfile>
        </PropertyGroup>
      </UserPropertyGroup>
    </PropertyGroup>

    <XmlPoke XmlInputPath="$(MSBuildProjectFullPath).user"
             Value="$(UserPropertyGroup)"
             Query="/msb:Project"
             Namespaces="$(UserProjectNamespace)"
             Condition="'$(StartupFile)' != '' and '$(StartupDebugProfile)' != '$(StartupFile)'"/>

    <!-- Read again after we poke the PropertyGroup -->
    <XmlPoke XmlInputPath="$(MSBuildProjectFullPath).user"
             Value="$(StartupFile)"
             Query="/msb:Project/msb:PropertyGroup/msb:ActiveDebugProfile"
             Namespaces="$(UserProjectNamespace)"
             Condition="'$(StartupFile)' != '' and '$(StartupDebugProfile)' != '$(StartupFile)'"/>

    <Warning Text="Could not set ActiveDebugProfile=$(StartupFile). Run the project once to fix it."
             Condition="'$(StartupFile)' != '' and '$(StartupDebugProfile)' != '$(StartupFile)'"/>

  </Target>

  <ItemGroup>
    <!-- Ensure changes we make to this file trigger a new DTB -->
    <UpToDateCheckBuilt Include="Properties\launchSettings.json" />
  </ItemGroup>

</Project>
